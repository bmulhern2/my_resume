{"version":3,"sources":["zlib (ignored)","fs (ignored)","http (ignored)","https (ignored)","url (ignored)","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  videos: any\r\n  constructor(private http: HttpClient, private el: ElementRef) {}\r\n  ngOnInit() {\r\n    this.http.get('/video').subscribe(videos => {\r\n      if (videos) {\r\n        this.videos = videos\r\n        console.log(this.videos)\r\n      } else {\r\n        console.log(\"Error\")\r\n      }\r\n    })\r\n  }\r\n  upload() {\r\n    let inputEl: HTMLInputElement = this.el.nativeElement.querySelector('#photo')\r\n    let fileCount: number = inputEl.files.length\r\n    let formData = new FormData()\r\n    if (fileCount > 0) {\r\n      formData.append('photo', inputEl.files.item(0))\r\n      this.http.post('/upload', formData).subscribe(err => {\r\n        if (err) {\r\n          console.log(err)\r\n        } else {\r\n          console.log(\"Success\")\r\n        }\r\n       })\r\n    }\r\n  }\r\n}\r\n","<mat-tab-group>\r\n  <mat-tab label=\"Watch\">\r\n    <div *ngFor=\"let video of videos\">\r\n           <video autoplay src=\"{{ video.video }}\"></video>\r\n    </div>\r\n  </mat-tab>\r\n  <mat-tab label=\"Upload\">\r\n    <input id=\"photo\" type=\"file\" />\r\n<button type=\"button\" (click)=\"upload()\">Upload</button>\r\n  </mat-tab>\r\n</mat-tab-group>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { PdfViewerModule } from 'ng2-pdf-viewer'\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations'\r\n\r\nimport { MatTabsModule } from '@angular/material/tabs'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    PdfViewerModule,\r\n    NoopAnimationsModule,\r\n    MatTabsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}